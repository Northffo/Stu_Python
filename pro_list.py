# 运用list()切片
'''
使用模式: [start:end:step]
    其中start表示切片开始的位置,默认是0
    end表示切片截止的位置(不包含),默认是列表长度
    step表示切片的步长,默认是1
    当start是0时,可以省略;当end是列表的长度时,可以省略.
    当step是1时,也可以省略,并且省略步长时可以同时省略最后一个冒号.
    此外,当step为负数时,表示反向切片,这时start值应该比end值大.
    注意:切片操作创建了一个新的列表.
'''
alist = [1, 2, 3, 4, 5, 6, 7, 8, 9]

print(alist[::])    # 返回包含原列表所有元素的新列表
print(alist[::-1])  # 返回原列表的一个逆序列表
print(alist[::2])   # 取列表下标偶数位元素
print(alist[1::2])  # 取出下标奇数位元素
print(alist[3:6])   # 取列表中下表为3到6的元素

print(alist[:10])   # end大于列表长度时，取列表中所有元素
print(alist[10:])   # 表示从列表中第10位开始取，一直到列表结束，步长是1

alist[len(alist):] = [10]   # 在列表的末尾添加一个元素

alist[:0] = [-1, 0] # 在列表的头部插入元素，alist[:0]相当于alist[0:0] 再相当于[0:0:1]

alist[5:5] = [-6]   # 把列表的第6个位置替换成-6，相当于alist[5:5:1] = [-6]

alist = [1, 2, 3, 4, 5, 6, 7, 8, 9]
alist[:3] = ['A', 'B', 'C', 'D']    # 把alist的前3个元素替换成['A', 'B', 'C', 'D']
                                    # ['A', 'B', 'C', 'D', 4, 5, 6, 7, 8, 9]

alist[3:] = ['E', 'F', 'G']         # 把alist第3个元素之后的元素替换成['A', 'B', 'C', 'D']
                                    # ['A', 'B', 'C', 'E', 'F', 'G']

alist = [1, 2, 3, 4, 5, 6]
alist[::2] = [0]*3      # 替换列表下表是偶数（含0）的前三个元素,注意使用该方法时,列表下标是偶数的元素个数必须与后面替换的元素个数相等,否则报错

# alist[::2] = ['a', 'b', 'c']    #同上

alist = [1, 2, 3, 4, 5, 6]
alist[:3] = []          # 删除列表中的前3个元素

alist = [1, 2, 3, 4, 5, 6]

del alist[:3]           # 使用del关键字删除列表前3个元素

alist = [1, 2, 3, 4, 5, 6]
del alist[::2]          # 删除列表下表是偶数的元素

print(sorted([1, 2, 3], reverse=True) == reversed([1, 2, 3]))   # sorted() 返回的是列表 reversed()返回的是反向迭代器

print([5 for i in range(3)])

